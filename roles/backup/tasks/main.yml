---
- name: Ensure backup directory exists on source
  ansible.windows.win_file:
    path: "{{ backup_dir }}"
    state: directory

- name: Ensure dbatools PowerShell module is present
  ansible.windows.win_powershell:
    script: |
      $Ansible.Changed = $false
      $ErrorActionPreference = 'Stop'
      try { [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 } catch {}
      if (-not (Get-PackageProvider -Name NuGet -ListAvailable -ErrorAction SilentlyContinue)) {
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Confirm:$false -ErrorAction Stop
      }
      if (-not (Get-PSRepository -Name 'PSGallery' -ErrorAction SilentlyContinue)) {
        Register-PSRepository -Default -ErrorAction Stop
      }
      try { Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted -ErrorAction SilentlyContinue } catch {}
      if (-not (Get-Module -ListAvailable -Name dbatools)) {
        Install-Module -Name dbatools -Force -Scope AllUsers -AllowClobber -Confirm:$false -ErrorAction Stop
        $Ansible.Changed = $true
      }

- name: Set backup file paths
  ansible.builtin.set_fact:
    backup_filename: "{{ backup_file | default(db_name + '.bak') }}"
    backup_fullpath: "{{ backup_dir }}\\{{ backup_filename }}"
    controller_backup_path: "{{ controller_backup_path | default(playbook_dir + '/files/' + backup_filename) }}"

- name: Perform FULL backup on source (dbatools)
  ansible.windows.win_powershell:
    script: |
      $ErrorActionPreference = 'Stop'
      Import-Module dbatools -ErrorAction Stop
      $params = @{
        SqlInstance   = "localhost\{{ sql_instance }}"
        Database      = "{{ db_name }}"
        BackupFile    = "{{ backup_fullpath }}"
        Type          = 'Full'
        CopyOnly      = $true
        Compress      = $true
        Initialize    = $true
      }
      Backup-DbaDatabase @params

- name: Verify backup file exists
  ansible.windows.win_stat:
    path: "{{ backup_fullpath }}"
  register: backup_stat

- name: Fail if backup file not found
  ansible.builtin.fail:
    msg: "Expected backup file not found: {{ backup_fullpath }}. Verify SQL instance, permissions, and path."
  when: not backup_stat.stat.exists

- name: Ensure controller backup directory exists
  ansible.builtin.file:
    path: "{{ controller_backup_path | dirname }}"
    state: directory
  delegate_to: localhost
  run_once: true

- name: Read .bak from source
  ansible.windows.slurp:
    src: "{{ backup_fullpath }}"
  register: backup_b64
  when: backup_stat.stat.exists

- name: Write .bak to controller
  ansible.builtin.copy:
    content: "{{ backup_b64.content | b64decode }}"
    dest: "{{ controller_backup_path }}"
    force: false
  delegate_to: localhost
  run_once: true
